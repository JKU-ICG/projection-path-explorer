{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/workers/worker_healthcheck.tsx","webpack:///./src/utils/backend-connect.ts"],"names":["Object","defineProperty","exports","value","backend_utils","require","backendRunning","check","fetch","BASE_URL","method","then","context","self","postMessage","catch","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","apply","calculate_hdbscan_clusters","upload_sdf_file","get_mcs_from_smiles_list","get_structures_from_smiles_list","get_structure_from_smiles","smiles_cache","get_smiles_cache","smiles","formData","FormData","append","body","response","text","data","error","console","json","file","formData_file","X","JSON","stringify"],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFa;;AACbA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,OAAK,EAAE;AAAT,CAA7C;;AACA,IAAMC,aAAa,GAAGC,mBAAO,CAAC,mEAAD,CAA7B;;AACA,IAAIC,cAAc,GAAG,KAArB;;AACA,SAASC,KAAT,GAAiB;AACbC,OAAK,CAACJ,aAAa,CAACK,QAAd,GAAyB,cAA1B,EAA0C;AAC3CC,UAAM,EAAE;AADmC,GAA1C,CAAL,CAEGC,IAFH,CAEQ,YAAM;AACV,QAAIC,OAAO,GAAGC,IAAd;;AACA,QAAIP,cAAc,IAAI,KAAtB,EAA6B;AACzBM,aAAO,CAACE,WAAR,CAAoB,IAApB;AACH;;AACDR,kBAAc,GAAG,IAAjB;AACH,GARD,EAQGS,KARH,CAQS,YAAM;AACX,QAAIH,OAAO,GAAGC,IAAd;;AACA,QAAIP,cAAc,IAAI,IAAtB,EAA4B;AACxBM,aAAO,CAACE,WAAR,CAAoB,KAApB;AACH;;AACDR,kBAAc,GAAG,KAAjB;AACH,GAdD;AAeH;;AACDC,KAAK,G;;;;;;;;;;;;ACrBQ;;AACb,IAAIS,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA4B,UAAUC,OAAV,EAAmBC,UAAnB,EAA+BC,CAA/B,EAAkCC,SAAlC,EAA6C;AACrF,WAASC,KAAT,CAAelB,KAAf,EAAsB;AAAE,WAAOA,KAAK,YAAYgB,CAAjB,GAAqBhB,KAArB,GAA6B,IAAIgB,CAAJ,CAAM,UAAUG,OAAV,EAAmB;AAAEA,aAAO,CAACnB,KAAD,CAAP;AAAiB,KAA5C,CAApC;AAAoF;;AAC5G,SAAO,KAAKgB,CAAC,KAAKA,CAAC,GAAGI,OAAT,CAAN,EAAyB,UAAUD,OAAV,EAAmBE,MAAnB,EAA2B;AACvD,aAASC,SAAT,CAAmBtB,KAAnB,EAA0B;AAAE,UAAI;AAAEuB,YAAI,CAACN,SAAS,CAACO,IAAV,CAAexB,KAAf,CAAD,CAAJ;AAA8B,OAApC,CAAqC,OAAOyB,CAAP,EAAU;AAAEJ,cAAM,CAACI,CAAD,CAAN;AAAY;AAAE;;AAC3F,aAASC,QAAT,CAAkB1B,KAAlB,EAAyB;AAAE,UAAI;AAAEuB,YAAI,CAACN,SAAS,CAAC,OAAD,CAAT,CAAmBjB,KAAnB,CAAD,CAAJ;AAAkC,OAAxC,CAAyC,OAAOyB,CAAP,EAAU;AAAEJ,cAAM,CAACI,CAAD,CAAN;AAAY;AAAE;;AAC9F,aAASF,IAAT,CAAcI,MAAd,EAAsB;AAAEA,YAAM,CAACC,IAAP,GAAcT,OAAO,CAACQ,MAAM,CAAC3B,KAAR,CAArB,GAAsCkB,KAAK,CAACS,MAAM,CAAC3B,KAAR,CAAL,CAAoBQ,IAApB,CAAyBc,SAAzB,EAAoCI,QAApC,CAAtC;AAAsF;;AAC9GH,QAAI,CAAC,CAACN,SAAS,GAAGA,SAAS,CAACY,KAAV,CAAgBf,OAAhB,EAAyBC,UAAU,IAAI,EAAvC,CAAb,EAAyDS,IAAzD,EAAD,CAAJ;AACH,GALM,CAAP;AAMH,CARD;;AASA3B,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,OAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAAC+B,0BAAR,GAAqC/B,OAAO,CAACgC,eAAR,GAA0BhC,OAAO,CAACiC,wBAAR,GAAmCjC,OAAO,CAACkC,+BAAR,GAA0ClC,OAAO,CAACmC,yBAAR,GAAoCnC,OAAO,CAACO,QAAR,GAAmB,KAAK,CAAxM;AACAP,OAAO,CAACO,QAAR,GAAmB,uBAAnB,C,CAA4C;AAC5C;AACA;AACA;AACA;;AACA,IAAI6B,YAAY,GAAG,EAAnB;;AACA,SAASC,gBAAT,CAA0BC,MAA1B,EAAkC;AAC9B,SAAOxB,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,uCAAuB;AAAA;AAAA;AAAA;AAAA;AAAA,6CAC5BsB,YAAY,CAACE,MAAD,CADgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB,EAAhB;AAGH;;AACD,SAASH,yBAAT,CAAmCG,MAAnC,EAA2C;AACvC,SAAOxB,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,uCAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAC/BsB,YAAY,CAACE,MAAD,CADmB;AAAA;AAAA;AAAA;;AAAA,8CAExBD,gBAAgB,CAACC,MAAD,CAFQ;;AAAA;AAI7BC,oBAJ6B,GAIlB,IAAIC,QAAJ,EAJkB;AAKnCD,oBAAQ,CAACE,MAAT,CAAgB,QAAhB,EAA0BH,MAA1B;AALmC,8CAM5BhC,KAAK,CAACN,OAAO,CAACO,QAAR,GAAmB,cAApB,EAAoC;AAC5CC,oBAAM,EAAE,MADoC;AAE5CkC,kBAAI,EAAEH;AAFsC,aAApC,CAAL,CAIF9B,IAJE,CAIG,UAAAkC,QAAQ;AAAA,qBAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,aAJX,EAKFnC,IALE,CAKG,UAAAoC,IAAI,EAAI;AACdT,0BAAY,CAACE,MAAD,CAAZ,GAAuBO,IAAvB;AACA,qBAAOA,IAAP;AACH,aARM,EASFhC,KATE,CASI,UAAAiC,KAAK,EAAI;AAChBC,qBAAO,CAACD,KAAR,CAAcA,KAAd;AACH,aAXM,CAN4B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB,EAAhB;AAmBH;;AACD9C,OAAO,CAACmC,yBAAR,GAAoCA,yBAApC;;AACA,SAASD,+BAAT,CAAyCK,QAAzC,EAAmD;AAC/C,SAAOzB,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,uCAAuB;AAAA;AAAA;AAAA;AAAA;AAAA,8CAC5BR,KAAK,CAACN,OAAO,CAACO,QAAR,GAAmB,eAApB,EAAqC;AAC7CC,oBAAM,EAAE,MADqC;AAE7CkC,kBAAI,EAAEH;AAFuC,aAArC,CAAL,CAIF9B,IAJE,CAIG,UAAAkC,QAAQ;AAAA,qBAAIA,QAAQ,CAACK,IAAT,EAAJ;AAAA,aAJX,EAKFnC,KALE,CAKI,UAAAiC,KAAK,EAAI;AAChBC,qBAAO,CAACD,KAAR,CAAcA,KAAd;AACH,aAPM,CAD4B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB,EAAhB;AAUH;;AACD9C,OAAO,CAACkC,+BAAR,GAA0CA,+BAA1C;;AACA,SAASD,wBAAT,CAAkCM,QAAlC,EAA4C;AACxC,SAAOzB,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,uCAAuB;AAAA;AAAA;AAAA;AAAA;AAAA,8CAC5BR,KAAK,CAACN,OAAO,CAACO,QAAR,GAAmB,qBAApB,EAA2C;AACnDC,oBAAM,EAAE,MAD2C;AAEnDkC,kBAAI,EAAEH;AAF6C,aAA3C,CAAL,CAIF9B,IAJE,CAIG,UAAAkC,QAAQ;AAAA,qBAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,aAJX,EAKF/B,KALE,CAKI,UAAAiC,KAAK,EAAI;AAChBC,qBAAO,CAACD,KAAR,CAAcA,KAAd;AACH,aAPM,CAD4B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB,EAAhB;AAUH;;AACD9C,OAAO,CAACiC,wBAAR,GAAmCA,wBAAnC;;AACA,SAASD,eAAT,CAAyBiB,IAAzB,EAA+B;AAC3B,SAAOnC,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,uCAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AACnC;AACA;AACMoC,yBAH6B,GAGb,IAAIV,QAAJ,EAHa;AAInCU,yBAAa,CAACT,MAAd,CAAqB,QAArB,EAA+BQ,IAA/B;AAJmC,8CAK5B3C,KAAK,CAACN,OAAO,CAACO,QAAR,GAAmB,aAApB,EAAmC;AAC3CC,oBAAM,EAAE,MADmC;AAE3CkC,kBAAI,EAAEQ;AAFqC,aAAnC,CAAL,CAIFzC,IAJE,CAIG,UAAAkC,QAAQ;AAAA,qBAAIA,QAAQ,CAACK,IAAT,EAAJ;AAAA,aAJX,EAKFnC,KALE,CAKI,UAAAiC,KAAK,EAAI;AAChBC,qBAAO,CAACD,KAAR,CAAcA,KAAd;AACH,aAPM,CAL4B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB,EAAhB;AAcH;;AACD9C,OAAO,CAACgC,eAAR,GAA0BA,eAA1B;;AACA,SAASD,0BAAT,CAAoCoB,CAApC,EAAuC;AACnC,SAAOrC,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,uCAAuB;AAAA;AAAA;AAAA;AAAA;AAAA,8CAC5BR,KAAK,CAACN,OAAO,CAACO,QAAR,GAAmB,eAApB,EAAqC;AAC7CC,oBAAM,EAAE,MADqC;AAE7CkC,kBAAI,EAAEU,IAAI,CAACC,SAAL,CAAeF,CAAf;AAFuC,aAArC,CAAL,CAGJ1C,IAHI,CAGC,UAAAkC,QAAQ;AAAA,qBAAIA,QAAQ,CAACK,IAAT,EAAJ;AAAA,aAHT,CAD4B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB,EAAhB;AAMH;;AACDhD,OAAO,CAAC+B,0BAAR,GAAqCA,0BAArC,C","file":"healthcheck.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/components/workers/worker_healthcheck.tsx\");\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst backend_utils = require(\"../../utils/backend-connect\");\r\nvar backendRunning = false;\r\nfunction check() {\r\n    fetch(backend_utils.BASE_URL + '/healthcheck', {\r\n        method: 'GET'\r\n    }).then(() => {\r\n        let context = self;\r\n        if (backendRunning == false) {\r\n            context.postMessage(true);\r\n        }\r\n        backendRunning = true;\r\n    }).catch(() => {\r\n        let context = self;\r\n        if (backendRunning == true) {\r\n            context.postMessage(false);\r\n        }\r\n        backendRunning = false;\r\n    });\r\n}\r\ncheck();\r\n","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.calculate_hdbscan_clusters = exports.upload_sdf_file = exports.get_mcs_from_smiles_list = exports.get_structures_from_smiles_list = exports.get_structure_from_smiles = exports.BASE_URL = void 0;\r\nexports.BASE_URL = 'http://127.0.0.1:8080'; // for local\r\n// export const BASE_URL = ''; // for AWS\r\n// export const BASE_URL = 'https://chemvis.caleydoapp.org'; // for netlify\r\n// export const BASE_URL = 'http://127.0.0.1:5000';\r\n// export const BASE_URL = 'http://caleydoapp.org:32819';\r\nvar smiles_cache = {};\r\nfunction get_smiles_cache(smiles) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        return smiles_cache[smiles];\r\n    });\r\n}\r\nfunction get_structure_from_smiles(smiles) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        if (smiles_cache[smiles]) { //already downloaded this image -> saved in smiles cache\r\n            return get_smiles_cache(smiles);\r\n        }\r\n        const formData = new FormData();\r\n        formData.append('smiles', smiles);\r\n        return fetch(exports.BASE_URL + '/get_mol_img', {\r\n            method: 'POST',\r\n            body: formData,\r\n        })\r\n            .then(response => response.text())\r\n            .then(data => {\r\n            smiles_cache[smiles] = data;\r\n            return data;\r\n        })\r\n            .catch(error => {\r\n            console.error(error);\r\n        });\r\n    });\r\n}\r\nexports.get_structure_from_smiles = get_structure_from_smiles;\r\nfunction get_structures_from_smiles_list(formData) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        return fetch(exports.BASE_URL + '/get_mol_imgs', {\r\n            method: 'POST',\r\n            body: formData,\r\n        })\r\n            .then(response => response.json())\r\n            .catch(error => {\r\n            console.error(error);\r\n        });\r\n    });\r\n}\r\nexports.get_structures_from_smiles_list = get_structures_from_smiles_list;\r\nfunction get_mcs_from_smiles_list(formData) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        return fetch(exports.BASE_URL + '/get_common_mol_img', {\r\n            method: 'POST',\r\n            body: formData,\r\n        })\r\n            .then(response => response.text())\r\n            .catch(error => {\r\n            console.error(error);\r\n        });\r\n    });\r\n}\r\nexports.get_mcs_from_smiles_list = get_mcs_from_smiles_list;\r\nfunction upload_sdf_file(file) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        // upload the sdf file to the server\r\n        // the response is a unique filename that can be used to make further requests\r\n        const formData_file = new FormData();\r\n        formData_file.append('myFile', file);\r\n        return fetch(exports.BASE_URL + '/upload_sdf', {\r\n            method: 'POST',\r\n            body: formData_file,\r\n        })\r\n            .then(response => response.json())\r\n            .catch(error => {\r\n            console.error(error);\r\n        });\r\n    });\r\n}\r\nexports.upload_sdf_file = upload_sdf_file;\r\nfunction calculate_hdbscan_clusters(X) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        return fetch(exports.BASE_URL + '/segmentation', {\r\n            method: 'POST',\r\n            body: JSON.stringify(X)\r\n        }).then(response => response.json());\r\n    });\r\n}\r\nexports.calculate_hdbscan_clusters = calculate_hdbscan_clusters;\r\n"],"sourceRoot":""}